#!/usr/local/bin/python

import cgi
import os

class Purchase:

	def __init__(self):
		self.username = ""
		self.password = ""
		self.light_quantity = ""
		self.mid_quantity = ""
		self.heavy_quantity = ""
	
	def parseForm(self,form):
		if form.has_key("username") and form["username"].value != "" :
			self.username = form["username"].value.strip()
		if form.has_key("password") and form["password"].value != "":
			self.password = form["password"].value.strip()
		if form.getvalue("light-purchase"):
			self.light_quantity = form["light-quantity"].value.strip()
		if form.getvalue("mid-purchase"):
			self.mid_quantity = form["mid-quantity"].value.strip()
		if form.getvalue("heavy-purchase"):
			self.heavy_quantity = form["heavy-quantity"].value.strip()


	def checkAccount(self):
		fn= os.path.abspath('..')+'/databases/members.csv'
		catalogue = open(fn,'r')
		for line in catalogue.readlines():
			entry = line.split(',')
			if entry[0].strip() == self.username and entry[1].strip() == self.password:
				return True
		return False

	def editInventory(self):
		
		# Input: quantity selected by the user 		
		# Will update with the information from Parseform
		fn = os.path.abspath('..')+ '/databases/Inventory.csv'
		inventory = open(fn, "w")
		
		for line in inventory.readlines():
			entry = line.split(',')
			
			# They are restricted to purchase only the amount actually in the inventory
			if quantity > entry[3]:
				print "We have only " + entry[3] + " rides left"
			else:
			# Subtract the amount purchased from the inventory
			entry[3] = entry[3] - quantity 
		
		inventory.close()

	def appendLog(self):
		# Appends the bill's total owed amount, without taxes, in the Log.csv file
		# Input: total_before_tax generated by printBill()
		# Will update with the information from Parseform
		
		fn = os.path.abspath('..')+ '/databases/Log.csv'
		log = open(fn, "w")
		
		for line in log.readlines():
			entry = line.append(total_before_tax)

		log.close()



	def printHeader(self):
		print "Content-type: text/html\n\n"
		print "<html>\n"
		print "<head>"
		print """<link href = "../pages/css/bootstrap.min.css" media="all" rel="stylesheet" type="text/css"/>"""
		print """<link href = "../pages/css/custom.css" media = "all" rel="stylesheet" type="text/css">"""
		print "</head>"

	def printMenu(self):
		print """<header class ="navbar navbar-fixed-top">"""
		print """<div class = "navbar-inner">"""
		print "<nav>"
		print """<ul class = "nav pull-left">"""
		print """<li><a href="../home.html">HOME<i class="icon-home"></i></a></li>"""
		print "</ul>"
		print """<ul class = "nav pull-right">"""
		print """<li><a href="../pages/catalogue.html">Catalogue</a></li>"""
		print """<li><a href="../pages/login.html" target="_blank">Login</a></li>"""
		print "</ul>"
		print "</nav>"
		print "</div>"
		print "</header>"

	def printError(self):
		print """<div class = "span12">"""
		print """<div class = "alert alert-block alert-error">"""
		print "<h4>Oops!</h4>"
		print "<p>the username and password you entered did not match our records</p>"
		print"</div>"
		print"</div>"

	def printBill(self):
		# Display a bill itemizing with the GST and PST tax.
		# Will update with parseform
		
		total_before_tax = 0
	
		fn = os.path.abspath('..')+ '/databases/Inventory.csv'
		inventory = open(fn, 'r')
		
		for line in inventory.readlines():
			entry = line.split(',')
				
		for item in cgi.FieldStorage(): 
			rides =  int(cgi.FieldStorage[item]) # rides = quantity selected
			if rides == 0:
				continue 
			
			price = float(line[4])
			total_before_tax = rides * price
			gst = total_before_tax * 0.05
			pst = gst * 0.095
			
			print "Your bill: \n"
			print "ID, Name, Description, Quantity, Price \n"
			print entry[0] + ", " + entry[1] + ", " + entry[2] + ", " + rides + ", " entry[4]  # id, name, description, quantity, price
			print "Total before tax = %.2f \n" %(total_before_tax) 
			print "GST = %.2f \n" %(gst) 
			print "PST = %.2f \n" %(pst)
			print "Total with taxes =  %.2f \n" %(total_before_tax + gst + pst)
			
			# Provides a link back to the catalogue page and the home page at the end of the bill.
			print """<a href="catalogue.html">Catalogue</a>"""
			print """<a href="home.html">Home</a>"""			
		

form = cgi.FieldStorage()
order = Purchase()
order.parseForm(form)
order.printHeader()
print "<body>"
order.printMenu()
if order.checkAccount():
	order.editInventory()
	order.appendLog()
	order.printBill()
else:
	order.printError()
print "</body>"
print "</html>"
